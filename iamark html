<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>AquaPure | Removedor Inteligente de Marcas D'Água</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <style>
        :root {
            --primary: #4361ee;
            --secondary: #3f37c9;
            --accent: #4895ef;
            --light: #f8f9fa;
            --dark: #212529;
            --success: #4cc9f0;
            --warning: #f72585;
        }
        
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Poppins', sans-serif;
            background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
            min-height: 100vh;
            color: var(--dark);
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 2rem;
        }
        
        header {
            text-align: center;
            margin-bottom: 3rem;
        }
        
        .logo {
            font-size: 2.5rem;
            font-weight: 700;
            color: var(--primary);
            margin-bottom: 0.5rem;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 0.5rem;
        }
        
        .logo i {
            color: var(--accent);
        }
        
        .tagline {
            color: var(--secondary);
            font-weight: 300;
            font-size: 1.1rem;
        }
        
        .main-app {
            background: white;
            border-radius: 20px;
            box-shadow: 0 15px 30px rgba(0, 0, 0, 0.1);
            overflow: hidden;
            display: grid;
            grid-template-columns: 1fr 1fr;
            min-height: 600px;
        }
        
        .upload-section {
            padding: 3rem;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            background: linear-gradient(135deg, #e0eafc 0%, #cfdef3 100%);
            position: relative;
        }
        
        .upload-area {
            width: 100%;
            height: 300px;
            border: 3px dashed var(--accent);
            border-radius: 15px;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            transition: all 0.3s ease;
            background-color: rgba(255, 255, 255, 0.7);
        }
        
        .upload-area:hover {
            background-color: rgba(255, 255, 255, 0.9);
            transform: translateY(-5px);
        }
        
        .upload-area i {
            font-size: 4rem;
            color: var(--accent);
            margin-bottom: 1rem;
        }
        
        .upload-area p {
            font-size: 1.2rem;
            color: var(--secondary);
            text-align: center;
            margin-bottom: 1rem;
        }
        
        .upload-area span {
            font-size: 0.9rem;
            color: var(--dark);
            opacity: 0.7;
        }
        
        #fileInput {
            display: none;
        }
        
        .preview-section {
            padding: 2rem;
            display: flex;
            flex-direction: column;
        }
        
        .preview-container {
            flex-grow: 1;
            display: flex;
            align-items: center;
            justify-content: center;
            position: relative;
            overflow: hidden;
            border-radius: 10px;
            background-color: #f8f9fa;
        }
        
        canvas {
            max-width: 100%;
            max-height: 400px;
            border-radius: 10px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
        }
        
        .controls {
            margin-top: 2rem;
            display: flex;
            gap: 1rem;
        }
        
        .btn {
            padding: 0.8rem 1.5rem;
            border: none;
            border-radius: 50px;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }
        
        .btn-primary {
            background-color: var(--primary);
            color: white;
        }
        
        .btn-primary:hover {
            background-color: var(--secondary);
            transform: translateY(-2px);
        }
        
        .btn-outline {
            background-color: transparent;
            border: 2px solid var(--primary);
            color: var(--primary);
        }
        
        .btn-outline:hover {
            background-color: var(--primary);
            color: white;
        }
        
        .btn i {
            font-size: 1.2rem;
        }
        
        .settings-panel {
            margin-top: 2rem;
            padding: 1.5rem;
            background-color: #f8f9fa;
            border-radius: 10px;
        }
        
        .settings-title {
            font-size: 1.1rem;
            margin-bottom: 1rem;
            color: var(--secondary);
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }
        
        .slider-container {
            margin-bottom: 1rem;
        }
        
        .slider-container label {
            display: block;
            margin-bottom: 0.5rem;
            font-size: 0.9rem;
        }
        
        .slider {
            width: 100%;
            height: 8px;
            -webkit-appearance: none;
            appearance: none;
            background: #ddd;
            outline: none;
            border-radius: 10px;
        }
        
        .slider::-webkit-slider-thumb {
            -webkit-appearance: none;
            appearance: none;
            width: 20px;
            height: 20px;
            border-radius: 50%;
            background: var(--primary);
            cursor: pointer;
        }
        
        .loading-overlay {
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: rgba(255, 255, 255, 0.8);
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            z-index: 10;
            display: none;
        }
        
        .spinner {
            width: 50px;
            height: 50px;
            border: 5px solid rgba(67, 97, 238, 0.2);
            border-radius: 50%;
            border-top-color: var(--primary);
            animation: spin 1s ease-in-out infinite;
            margin-bottom: 1rem;
        }
        
        @keyframes spin {
            to { transform: rotate(360deg); }
        }
        
        .tabs {
            display: flex;
            margin-bottom: 1.5rem;
            border-bottom: 1px solid #eee;
        }
        
        .tab {
            padding: 0.8rem 1.5rem;
            cursor: pointer;
            font-weight: 500;
            color: var(--dark);
            opacity: 0.7;
            transition: all 0.3s ease;
            border-bottom: 3px solid transparent;
        }
        
        .tab.active {
            opacity: 1;
            color: var(--primary);
            border-bottom-color: var(--primary);
        }
        
        .tab-content {
            display: none;
        }
        
        .tab-content.active {
            display: block;
        }
        
        .comparison-container {
            display: flex;
            gap: 1rem;
            height: 100%;
        }
        
        .comparison-image {
            flex: 1;
            display: flex;
            align-items: center;
            justify-content: center;
            overflow: hidden;
        }
        
        .comparison-image img {
            max-width: 100%;
            max-height: 100%;
            object-fit: contain;
        }
        
        footer {
            text-align: center;
            margin-top: 3rem;
            color: var(--dark);
            opacity: 0.7;
            font-size: 0.9rem;
        }
        
        @media (max-width: 768px) {
            .main-app {
                grid-template-columns: 1fr;
            }
            
            .controls {
                flex-direction: column;
            }
            
            .btn {
                width: 100%;
                justify-content: center;
            }
        }
    </style>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
</head>
<body>
    <div class="container">
        <header>
            <div class="logo">
                <i class="fas fa-water"></i>
                <span>AquaPure</span>
            </div>
            <p class="tagline">Remoção inteligente de marcas d'água com tecnologia AI</p>
        </header>
        
        <div class="main-app">
            <div class="upload-section">
                <input type="file" id="fileInput" accept="image/*">
                <div class="upload-area" id="uploadArea">
                    <i class="fas fa-cloud-upload-alt"></i>
                    <p>Arraste e solte sua imagem aqui</p>
                    <span>ou clique para selecionar</span>
                </div>
                
                <div class="settings-panel">
                    <h3 class="settings-title">
                        <i class="fas fa-sliders-h"></i>
                        Configurações Avançadas
                    </h3>
                    
                    <div class="slider-container">
                        <label for="sensitivity">Sensibilidade de Detecção</label>
                        <input type="range" min="1" max="100" value="50" class="slider" id="sensitivity">
                    </div>
                    
                    <div class="slider-container">
                        <label for="blend">Suavização de Bordas</label>
                        <input type="range" min="1" max="100" value="75" class="slider" id="blend">
                    </div>
                    
                    <div class="controls" style="margin-top: 1.5rem;">
                        <button class="btn btn-primary" id="processBtn">
                            <i class="fas fa-magic"></i>
                            Processar Imagem
                        </button>
                    </div>
                </div>
            </div>
            
            <div class="preview-section">
                <div class="tabs">
                    <div class="tab active" data-tab="result">Resultado</div>
                    <div class="tab" data-tab="comparison">Comparação</div>
                    <div class="tab" data-tab="original">Original</div>
                </div>
                
                <div class="preview-container">
                    <div class="loading-overlay" id="loadingOverlay">
                        <div class="spinner"></div>
                        <p>Processando sua imagem...</p>
                    </div>
                    
                    <div class="tab-content active" id="resultTab">
                        <canvas id="resultCanvas"></canvas>
                    </div>
                    
                    <div class="tab-content" id="comparisonTab">
                        <div class="comparison-container">
                            <div class="comparison-image">
                                <img id="originalPreview" src="" alt="Original" style="display: none;">
                            </div>
                            <div class="comparison-image">
                                <canvas id="comparisonCanvas"></canvas>
                            </div>
                        </div>
                    </div>
                    
                    <div class="tab-content" id="originalTab">
                        <img id="originalImage" src="" alt="Original" style="max-width: 100%; display: none;">
                    </div>
                </div>
                
                <div class="controls">
                    <button class="btn btn-primary" id="downloadBtn" disabled>
                        <i class="fas fa-download"></i>
                        Baixar Resultado
                    </button>
                    <button class="btn btn-outline" id="resetBtn">
                        <i class="fas fa-redo"></i>
                        Nova Imagem
                    </button>
                </div>
            </div>
        </div>
        
        <footer>
            <p>AquaPure &copy; 2023 | Tecnologia de remoção de marcas d'água com IA</p>
            <p>Use apenas para conteúdo que você possui direitos</p>
        </footer>
    </div>

    <script>
        // Elementos DOM
        const fileInput = document.getElementById('fileInput');
        const uploadArea = document.getElementById('uploadArea');
        const resultCanvas = document.getElementById('resultCanvas');
        const comparisonCanvas = document.getElementById('comparisonCanvas');
        const originalImage = document.getElementById('originalImage');
        const originalPreview = document.getElementById('originalPreview');
        const processBtn = document.getElementById('processBtn');
        const downloadBtn = document.getElementById('downloadBtn');
        const resetBtn = document.getElementById('resetBtn');
        const loadingOverlay = document.getElementById('loadingOverlay');
        const sensitivitySlider = document.getElementById('sensitivity');
        const blendSlider = document.getElementById('blend');
        const tabs = document.querySelectorAll('.tab');
        const tabContents = document.querySelectorAll('.tab-content');
        
        // Variáveis globais
        let originalFile = null;
        let ctx = resultCanvas.getContext('2d');
        let compCtx = comparisonCanvas.getContext('2d');
        
        // Event Listeners
        uploadArea.addEventListener('click', () => fileInput.click());
        uploadArea.addEventListener('dragover', (e) => {
            e.preventDefault();
            uploadArea.style.borderColor = '#4895ef';
            uploadArea.style.backgroundColor = 'rgba(255, 255, 255, 0.95)';
        });
        
        uploadArea.addEventListener('dragleave', () => {
            uploadArea.style.borderColor = '#4895ef';
            uploadArea.style.backgroundColor = 'rgba(255, 255, 255, 0.7)';
        });
        
        uploadArea.addEventListener('drop', (e) => {
            e.preventDefault();
            uploadArea.style.borderColor = '#4895ef';
            uploadArea.style.backgroundColor = 'rgba(255, 255, 255, 0.7)';
            
            if (e.dataTransfer.files.length) {
                handleFile(e.dataTransfer.files[0]);
            }
        });
        
        fileInput.addEventListener('change', () => {
            if (fileInput.files.length) {
                handleFile(fileInput.files[0]);
            }
        });
        
        processBtn.addEventListener('click', processImage);
        downloadBtn.addEventListener('click', downloadResult);
        resetBtn.addEventListener('click', resetApp);
        
        // Tabs functionality
        tabs.forEach(tab => {
            tab.addEventListener('click', () => {
                tabs.forEach(t => t.classList.remove('active'));
                tabContents.forEach(c => c.classList.remove('active'));
                
                tab.classList.add('active');
                const tabId = tab.getAttribute('data-tab') + 'Tab';
                document.getElementById(tabId).classList.add('active');
            });
        });
        
        // Funções
        function handleFile(file) {
            if (!file.type.match('image.*')) {
                alert('Por favor, selecione um arquivo de imagem.');
                return;
            }
            
            originalFile = file;
            const reader = new FileReader();
            
            reader.onload = function(e) {
                const img = new Image();
                img.onload = function() {
                    // Configura os canvases
                    resultCanvas.width = img.width;
                    resultCanvas.height = img.height;
                    comparisonCanvas.width = img.width;
                    comparisonCanvas.height = img.height;
                    
                    // Desenha a imagem original
                    ctx.drawImage(img, 0, 0);
                    compCtx.drawImage(img, 0, 0);
                    
                    // Mostra a pré-visualização
                    originalImage.src = e.target.result;
                    originalImage.style.display = 'block';
                    originalPreview.src = e.target.result;
                    originalPreview.style.display = 'block';
                    
                    // Ativa o botão de processar
                    processBtn.disabled = false;
                };
                img.src = e.target.result;
            };
            
            reader.readAsDataURL(file);
        }
        
        function processImage() {
            if (!originalFile) return;
            
            loadingOverlay.style.display = 'flex';
            processBtn.disabled = true;
            
            // Simula o processamento (em um app real, aqui seria a chamada ao algoritmo de remoção)
            setTimeout(() => {
                const sensitivity = sensitivitySlider.value / 100;
                const blend = blendSlider.value / 100;
                
                // Aqui seria implementada a lógica real de remoção de marca d'água
                // Esta é uma simulação básica para demonstração
                const imageData = ctx.getImageData(0, 0, resultCanvas.width, resultCanvas.height);
                const data = imageData.data;
                
                // Simples detecção de áreas claras (como marca d'água)
                for (let i = 0; i < data.length; i += 4) {
                    const brightness = (data[i] + data[i+1] + data[i+2]) / 3;
                    
                    if (brightness > 200 + (50 * (1 - sensitivity))) {
                        // Substitui por pixels vizinhos com suavização
                        const blendFactor = blend * 0.5;
                        
                        data[i] = data[i-4] ? 
                            (data[i] * (1 - blendFactor) + data[i-4] * blendFactor) : 
                            (data[i] * (1 - blendFactor) + data[i+4] * blendFactor) || data[i];
                            
                        data[i+1] = data[i-3] ? 
                            (data[i+1] * (1 - blendFactor) + data[i-3] * blendFactor) : 
                            (data[i+1] * (1 - blendFactor) + data[i+5] * blendFactor) || data[i+1];
                            
                        data[i+2] = data[i-2] ? 
                            (data[i+2] * (1 - blendFactor) + data[i-2] * blendFactor) : 
                            (data[i+2] * (1 - blendFactor) + data[i+6] * blendFactor) || data[i+2];
                    }
                }
                
                ctx.putImageData(imageData, 0, 0);
                loadingOverlay.style.display = 'none';
                downloadBtn.disabled = false;
                
                // Atualiza a comparação
                compCtx.drawImage(resultCanvas, 0, 0);
            }, 1500); // Simula um processamento demorado
        }
        
        function downloadResult() {
            const link = document.createElement('a');
            link.download = 'aquapure_resultado.png';
            link.href = resultCanvas.toDataURL('image/png');
            link.click();
        }
        
        function resetApp() {
            resultCanvas.width = 0;
            resultCanvas.height = 0;
            comparisonCanvas.width = 0;
            comparisonCanvas.height = 0;
            originalImage.src = '';
            originalImage.style.display = 'none';
            originalPreview.src = '';
            originalPreview.style.display = 'none';
            fileInput.value = '';
            originalFile = null;
            processBtn.disabled = true;
            downloadBtn.disabled = true;
            
            // Reset para a primeira tab
            tabs.forEach((t, i) => {
                t.classList.remove('active');
                tabContents[i].classList.remove('active');
            });
            tabs[0].classList.add('active');
            tabContents[0].classList.add('active');
        }
    </script>
</body>
</html>
